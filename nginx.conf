user nginx;
worker_processes auto;
worker_rlimit_nofile 1000000;
worker_cpu_affinity auto;

# Configurações específicas para baixa latência
timer_resolution 1ms;
worker_priority -5;

events {
    use epoll;
    worker_connections 16384;  # Aumentado
    multi_accept on;
    accept_mutex off;
    epoll_events 512;  # Processar mais eventos por vez
}

http {
    # Logs otimizados
    access_log off;
    error_log /var/log/nginx/error.log crit;
    
    # Performance básica
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Timeouts otimizados para baixa latência
    keepalive_timeout 65;
    keepalive_requests 10000;  # Muito mais requests por conexão
    client_header_timeout 5s;  # Reduzido
    client_body_timeout 5s;    # Reduzido
    send_timeout 5s;           # Reduzido
    
    # Buffers otimizados
    client_max_body_size 1m;
    client_body_buffer_size 256k;  # Aumentado
    client_header_buffer_size 4k;  # Aumentado
    large_client_header_buffers 8 16k;
    
    # Hash tables maiores para performance
    server_names_hash_bucket_size 128;
    server_names_hash_max_size 2048;
    
    # Compressão eficiente
    gzip on;
    gzip_vary on;
    gzip_comp_level 2;  # Reduzido para menos CPU
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types application/json text/plain application/javascript text/css;
    
    # Cache de arquivos otimizado
    open_file_cache max=100000 inactive=60s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 1;  # Cache mais agressivo
    open_file_cache_errors on;
    
    # Rate limiting global para proteção
    limit_req_zone $binary_remote_addr zone=api:10m rate=1000r/s;
    
    upstream api {
        # Algoritmo otimizado para baixa latência
        ip_hash;  # Mais rápido que least_conn para muitas conexões
        
        server unix:/sockets/api1.sock max_fails=2 fail_timeout=10s weight=1;
        server unix:/sockets/api2.sock max_fails=2 fail_timeout=10s weight=1;
        
        # Conexões keepalive muito maiores
        keepalive 1000;           # 5x maior
        keepalive_requests 10000; # Muitos requests por conexão
        keepalive_timeout 120s;   # Timeout maior para reutilização
    }
    
    # Configurações de proxy otimizadas globalmente
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    
    # Buffers de proxy otimizados
    proxy_buffering on;  # CRÍTICO para performance!
    proxy_buffer_size 256k;        # 2x maior
    proxy_buffers 8 256k;          # Mais buffers
    proxy_busy_buffers_size 512k;  # Buffer ocupado maior
    proxy_temp_file_write_size 512k;
    
    # Timeouts de proxy otimizados
    proxy_connect_timeout 2s;     # Mais rápido
    proxy_send_timeout 5s;        # Mais rápido  
    proxy_read_timeout 10s;       # Reduzido para APIs rápidas
    
    # Headers de proxy essenciais
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    server {
        listen 9999 reuseport backlog=65535;  # Backlog maior
        
        # Rate limiting aplicado
        limit_req zone=api burst=100 nodelay;
        
        # Otimizações específicas do servidor
        client_body_in_single_buffer on;
        
        # Headers de performance
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;  # Docker networks
            deny all;
        }
        
        location / {
            # Proxy para upstream
            proxy_pass http://api;
            
            # Cache de DNS (importante para upstreams dinâmicos)
            resolver 127.0.0.11 valid=10s ipv6=off;
            
            # Headers específicos para APIs JSON
            proxy_set_header Accept-Encoding "";  # Desabilita compressão upstream
            proxy_set_header Content-Type "application/json";
            
            # Otimizações específicas da rota
            proxy_request_buffering on;   # Buffer request completo
            proxy_buffering on;           # Buffer response
            
            # Cache de responses curtos (opcional)
            # proxy_cache_valid 200 1s;  # Cache 1 segundo para responses 200
            
            # Headers de debug (remover em produção)
            add_header X-Upstream-Response-Time $upstream_response_time always;
            add_header X-Upstream-Status $upstream_status always;
        }
    }
}