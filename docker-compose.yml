services:
  api1: &api
    image: ${DOCKER_REGISTRY-}paymentprocessorapi
    build:
      context: .
      dockerfile: PaymentProcessor.Api/Dockerfile
    hostname: api1
    networks:
      - backend
      - payment-processor
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - SOCKET_PATH=/sockets/api1.sock
    volumes:
      - /sockets:/sockets
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "200MB"

  api2:
    <<: *api
    hostname: api2
    volumes:
      - /sockets:/sockets
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - SOCKET_PATH=/sockets/api2.sock
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: "200MB"

  worker:
    image: ${DOCKER_REGISTRY-}paymentprocessorworker
    build:
      context: .
      dockerfile: PaymentProcessor.Worker/Dockerfile
    hostname: worker
    networks:
      - backend
      - payment-processor
    environment:
      - DOTNET_ENVIRONMENT=Production
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "150MB"

  nginx:
    image: nginx:1.29.0-alpine
    user: "0:0"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /sockets:/sockets
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "200MB"

  redis:
    image: redis:7-alpine
    container_name: redis
    networks:
      - backend
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "yes"]
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "100MB"

volumes:
  sockets: {}

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
